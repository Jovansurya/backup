# Stage 1: Build React App
FROM node:18-alpine AS build

WORKDIR /app

# Copy package files first (better caching)
COPY package*.json ./

# Install dependencies
RUN npm ci --only=production

# Copy source code
COPY . .

# Build the application
RUN npm run build


# Stage 2: Production with Nginx
FROM nginx:alpine

# Install dependencies
RUN apk --no-cache add curl openssl

# Generate SSL certificates (dummy self-signed)
RUN mkdir -p /etc/ssl/certs /etc/ssl/private && \
    openssl req -x509 -nodes -days 365 -newkey rsa:2048 \
    -keyout /etc/ssl/private/dummy_key.pem \
    -out /etc/ssl/certs/dummy_cert.pem \
    -subj "/C=ID/ST=Jakarta/L=Jakarta/O=Company/OU=IT/CN=coba.com/emailAddress=admin@coba.com" && \
    openssl dhparam -out /etc/ssl/certs/dhparam.pem 2048

# Remove default nginx config
RUN rm /etc/nginx/conf.d/default.conf

# Copy custom nginx.conf
COPY nginx.conf9 /etc/nginx/nginx.conf

# Copy built app from build stage
COPY --from=build /app/build /usr/share/nginx/html

# Create log directory & set permissions
RUN mkdir -p /var/log/nginx && \
    chown -R nginx:nginx /usr/share/nginx/html /var/log/nginx /etc/nginx

# Expose both HTTP and HTTPS ports
EXPOSE 80 443

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=15s --retries=3 \
    CMD curl -f http://localhost:80/health || curl -fk https://localhost:443/health || exit 1

# Start nginx
CMD ["nginx", "-g", "daemon off;"]
